name: ci

on:
  push:
    branches: [ master ]

env:
  TEST_TAG: aurelienandre/magento-lts:test

jobs:
  docker-deployment:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to Docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          load: true
          push: false
          tags: ${{ env.TEST_TAG }}
      - name: Composer Install
        run: |
          docker run --rm -i \
            -e COMPOSER_AUTH=${{ secrets.COMPOSER_AUTH }} \
            ${{ env.TEST_TAG }} \
            bin-composer install --prefer-dist --no-progress --no-interaction
      - name: PHPUnit
        run: |
          docker run --rm -i \
            -e COMPOSER_AUTH=${{ secrets.COMPOSER_AUTH }} \
            ${{ env.TEST_TAG }} \
            bin-composer exec phpunit
      - name: Static Content deploy
        run: |
          docker run --rm -i \
            -e COMPOSER_AUTH=${{ secrets.COMPOSER_AUTH }} \
            ${{ env.TEST_TAG }} \
            bin/magento setup:static-content:deploy fr_FR; \
            bin/magento setup:static-content:deploy en_US
      - name: Composer Dump Autoload
        run: |
          docker run --rm -i \
            -e COMPOSER_AUTH=${{ secrets.COMPOSER_AUTH }} \
            ${{ env.TEST_TAG }} \
            bin-composer dump-autoload --optimize --no-dev --classmap-authoritative
      - name: Create docker irgnore for prod
        run: |
          cp ${PWD}/.dockerignore.prod ${PWD}/.dockerignore
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: aurelienandre/magento-lts:latest
   
   
